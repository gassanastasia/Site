import sqlite3
# Создать подключение к базе данных SQLite:
conn = sqlite3.connect('news.db')
cursor = conn.cursor()
#Создать таблицу в базе данных
# cursor.execute('''CREATE TABLE users
#                (id INTERGER PRIMARY KEY, name TEXT, age INTERGER)''')

# Выполняем запрос на добавление новых столбцов в таблицу users
# cursor.execute('''ALTER TABLE users ADD COLUMN surname TEXT''')
# cursor.execute('''ALTER TABLE users ADD COLUMN faculty TEXT''')

# INTEGER означает, что в поле хранятся целочисленные значения.
# PRIMARY KEY указывает на то, что это поле будет использоваться в качестве первичного ключа таблицы.
# Первичный ключ – это уникальный идентификатор, который используется для создания связи между таблицами в базе данных.
# TEXT – класс данных, который используется для хранения строковых значений. Например, имя пользователя,
# почтовый адрес или наименование товара могут храниться в поле типа TEXT.
# Помимо TEXT и INTEGER SQLite имеет следующие классы для хранения данных:
# NULL – представляет нулевое значение.
# REAL – используется для хранения чисел с плавающей точкой.
# BLOB – применяется для хранения бинарных объектов (изображений, аудио или видео).
# На практике мультимедийные файлы очень редко хранят в БД – целесообразнее хранить там только ссылки на объекты.
# В SQLite не предусмотрены отдельные типы данных для хранения даты и времени,
# но можно использовать тип данных TEXT для хранения даты и времени в виде строки в формате ISO-8601.
# Некоторые другие типы данных при необходимости можно преобразовать в классы данных SQLite.
# К примеру, для хранения BOOLEAN значений можно использовать INTEGER, присваивая записи значения 0 или 1.

# задаем значения для новой записи
# name = 'Инна'
# surname = 'Егорова'
# age = 20
# faculty = 'Прикладная математика'
 
# добавляем новую запись в таблицу users
#cursor.execute('INSERT INTO users (name, surname, age, faculty) VALUES (?, ?, ?, ?)', (name, surname, age, faculty))
# обновляем возраст пользователя
# cursor.execute("UPDATE users SET age = ? WHERE name = ? AND surname = ?", (19, 'Инна', 'Егорова'))
# удаляем записи, содержащие "прикладная математика" в поле faculty
# cursor.execute("DELETE FROM users WHERE faculty LIKE '%Прикладная математика%'")

# Сохраняем изменения и закрываем соединение с базой
conn.commit()
conn.close()